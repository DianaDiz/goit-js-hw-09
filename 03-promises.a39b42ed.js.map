{"mappings":"AAGA,SAASA,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,IAAM,C,SAACR,E,MAAUC,GACjBQ,YAAW,KACLJ,EACFF,EAAQK,KAERJ,EAAOI,IAAI,GAEZE,WAAW,G,CAbFC,SAASC,cAAc,SAmB/BC,iBAAiB,UAAUC,IACjCA,EAAMC,iBACNC,QAAQC,IAAIH,GACZ,MACEI,UAAUjB,MAAEA,EAAKkB,KAAEA,EAAIC,OAAEA,IACvBN,EAAMO,cAEJX,EAAaY,OAAOrB,EAAMsB,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAClCP,QAAQC,IAAIP,EAAYc,EAAWC,GAEnC,IAAK,IAAIzB,EAAW,EAAGA,GAAYyB,EAAazB,GAAY,EAC1DS,YAAW,KACTO,QAAQC,IAAIjB,EAAUU,EAAYc,EAAWC,GAC7ChB,YAAW,KACTV,EAAcC,EAAUU,EAAac,EAAYxB,GAC9C0B,MAAKC,GAAOC,UAAUD,EAAI3B,SAAU2B,EAAI1B,SACxC4B,OAAMC,GAASC,SAASD,EAAM9B,SAAU8B,EAAM7B,QAAO,GACvDS,EAAW,GACbc,EAAU","sources":["src/js/03-promises.js"],"sourcesContent":["\nconst formRef = document.querySelector('.form');\n// console.log(formRef);\nfunction createPromise(position, delay) {\n  \n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    obj = {position, delay};\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(obj);\n      } else {\n        reject(obj);\n      }\n    }, delayValue);\n    \n  })\n  \n}\n\nformRef.addEventListener('submit', event => {\n  event.preventDefault();\n  console.log(event);\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  const delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n  console.log(delayValue, stepValue, amountValue);\n\n  for (let position = 1; position <= amountValue; position += 1) {\n    setTimeout(() => {\n      console.log(position, delayValue, stepValue, amountValue);\n      setTimeout(() => {\n        createPromise(position, delayValue + stepValue * position)\n          .then(res => onSuccess(res.position, res.delay))\n          .catch(error => onReject(error.position, error.delay));\n      }, delayValue);\n    }, stepValue);\n  }\n});\n//--------------------------------------------------------------\n\n// createPromise(position, delayValue + stepValue * position)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n\n\n\n\n\n\n\n//``````````````````````\n\n\n// function createPromise(position, delay) {\n  \n//   return new Promise((resolve, reject) => {\n//     const shouldResolve = Math.random() > 0.3;\n//     obj = {position, delay};\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve(obj);\n//       } else {\n//         reject(obj);\n//       }\n//     }, delay);\n    \n//   })\n  \n// }\n\n\n// formRef.addEventListener('submit', event => {\n//   event.рreventDefault();\n//   const {\n//     elements: { delay, step, amount },\n//   } = event.currentTarget;\n//   const delayValue = Number(delay.value);\n//   const stepValue = Number(step.value);\n//   const amountValue = Number(amount.value);\n//   console.log(delayValue, stepValue, amountValue);\n\n//   for (let position = 1; position <= amountValue; position += 1) {\n//     setTimeout(() => {\n//       console.log(position, delayValue, stepValue, amountValue);\n//       setTimeout(() => {\n//         createPromise(position, delayValue + stepValue * position)\n//           .then(res => onSuccess(res.position, res.delay))\n//           .catch(error => onReject(error.position, error.delay));\n//       }, delayValue);\n//     }, stepValue)\n//   }\n// })\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","obj","setTimeout","delayValue","document","querySelector","addEventListener","event","preventDefault","console","log","elements","step","amount","currentTarget","Number","value","stepValue","amountValue","then","res","onSuccess","catch","error","onReject"],"version":3,"file":"03-promises.a39b42ed.js.map"}